/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* dynports =  1  *)
(* src = "palabra.v:1" *)
module \$paramod\palabra\bus_sintetizado_SIZE=16\WORD_SIZE=4 (clk, reset, data_in, data_out_sintetizado, salida_control_sintetizado);
  (* src = "palabra.v:13" *)
  wire [3:0] _00_;
  (* src = "palabra.v:13" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "palabra.v:6" *)
  input clk;
  (* src = "palabra.v:8" *)
  input [3:0] data_in;
  (* src = "palabra.v:9" *)
  output [3:0] data_out_sintetizado;
  (* src = "palabra.v:7" *)
  input reset;
  (* src = "palabra.v:10" *)
  output salida_control_sintetizado;
  NAND _10_ (
    .A(data_in[0]),
    .B(reset),
    .Y(_02_)
  );
  NOT _11_ (
    .A(_02_),
    .Y(_00_[0])
  );
  NAND _12_ (
    .A(reset),
    .B(data_in[1]),
    .Y(_03_)
  );
  NOT _13_ (
    .A(_03_),
    .Y(_00_[1])
  );
  NAND _14_ (
    .A(reset),
    .B(data_in[2]),
    .Y(_04_)
  );
  NOT _15_ (
    .A(_04_),
    .Y(_00_[2])
  );
  NAND _16_ (
    .A(reset),
    .B(data_in[3]),
    .Y(_05_)
  );
  NOT _17_ (
    .A(_05_),
    .Y(_00_[3])
  );
  NOR _18_ (
    .A(data_in[2]),
    .B(data_in[3]),
    .Y(_06_)
  );
  NOR _19_ (
    .A(data_in[0]),
    .B(data_in[1]),
    .Y(_07_)
  );
  NAND _20_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _21_ (
    .A(reset),
    .B(_08_),
    .Y(_09_)
  );
  NOT _22_ (
    .A(_09_),
    .Y(_01_)
  );
  (* src = "palabra.v:13" *)
  DFF _23_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_out_sintetizado[0])
  );
  (* src = "palabra.v:13" *)
  DFF _24_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_out_sintetizado[1])
  );
  (* src = "palabra.v:13" *)
  DFF _25_ (
    .C(clk),
    .D(_00_[2]),
    .Q(data_out_sintetizado[2])
  );
  (* src = "palabra.v:13" *)
  DFF _26_ (
    .C(clk),
    .D(_00_[3]),
    .Q(data_out_sintetizado[3])
  );
  (* src = "palabra.v:13" *)
  DFF _27_ (
    .C(clk),
    .D(_01_),
    .Q(salida_control_sintetizado)
  );
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "bus_sintetizado.v:2" *)
module Data_Bus_Synth(clk, reset, data_in, data_out_sintetizado, salida_control_sintetizado);
  (* src = "bus_sintetizado.v:7" *)
  input clk;
  (* src = "bus_sintetizado.v:9" *)
  input [15:0] data_in;
  (* src = "bus_sintetizado.v:10" *)
  output [15:0] data_out_sintetizado;
  (* src = "bus_sintetizado.v:8" *)
  input reset;
  (* src = "bus_sintetizado.v:11" *)
  output [3:0] salida_control_sintetizado;
  (* src = "bus_sintetizado.v:16" *)
  \$paramod\palabra\bus_sintetizado_SIZE=16\WORD_SIZE=4  \MEM[0].palabra1  (
    .clk(clk),
    .data_in(data_in[3:0]),
    .data_out_sintetizado(data_out_sintetizado[15:12]),
    .reset(reset),
    .salida_control_sintetizado(salida_control_sintetizado[3])
  );
  (* src = "bus_sintetizado.v:16" *)
  \$paramod\palabra\bus_sintetizado_SIZE=16\WORD_SIZE=4  \MEM[1].palabra1  (
    .clk(clk),
    .data_in(data_in[7:4]),
    .data_out_sintetizado(data_out_sintetizado[11:8]),
    .reset(reset),
    .salida_control_sintetizado(salida_control_sintetizado[2])
  );
  (* src = "bus_sintetizado.v:16" *)
  \$paramod\palabra\bus_sintetizado_SIZE=16\WORD_SIZE=4  \MEM[2].palabra1  (
    .clk(clk),
    .data_in(data_in[11:8]),
    .data_out_sintetizado(data_out_sintetizado[7:4]),
    .reset(reset),
    .salida_control_sintetizado(salida_control_sintetizado[1])
  );
  (* src = "bus_sintetizado.v:16" *)
  \$paramod\palabra\bus_sintetizado_SIZE=16\WORD_SIZE=4  \MEM[3].palabra1  (
    .clk(clk),
    .data_in(data_in[15:12]),
    .data_out_sintetizado(data_out_sintetizado[3:0]),
    .reset(reset),
    .salida_control_sintetizado(salida_control_sintetizado[0])
  );
endmodule
